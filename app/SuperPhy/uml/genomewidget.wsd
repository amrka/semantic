@startuml

title GenomeWidget Class UML

interface Page {
	+ view()
}

abstract GenomeWidget {
	~ genome_dataset_id : String
	~ groupModels : GroupModels
	~ metadataVM : MetadataVM
	- genomeVizControllers : GenomeVizControllers
	- groupVizControllers : GroupVizControllers
	~ updateMeta() // Callback
	~ updateGenomeDataset() // Callback
	+ view()
	+ {abstract} controller()
}
GenomeWidget "0..1" <--o "1" Page

class DisplayGenomeWidget {
	+ controller( Int[] group_ids, String[] genomeVizClasses, String[] groupVizClasses )
}
DisplayGenomeWidget -|> GenomeWidget

class SelectionGenomeWidget {
	+ controller( String[] genomeVizClasses, String[] groupVizClasses )
	+ updateSelection() // Callback
}
SelectionGenomeWidget --|> GenomeWidget
DisplayGenomeWidget -[hidden]> SelectionGenomeWidget

interface Observable {
	- controllers
	- channels : String[]
	+ register(String class, Object widget)
	+ trigger(String channel, Object widget)
}

class GenomeVizControllers {
	- controllers : GenomeViz[]
	- channels=[metaUpdate|genomeDatasetUpdate|selectionUpdate]
	+ GenomeViz register(String genomeVizClass, Object widget)
	+ trigger(String channel, Object widget)
}
GenomeVizControllers --|> Observable
GenomeVizControllers "1" <--* "1" GenomeWidget

abstract GenomeViz {
	+ genomeModel : GenomeModel
	+ metaUpdate()
	+ genomeDatasetUpdate()
	+ selectionUpdate()
	+ view()
	+ controller()
}
GenomeViz "0..*" <--o "1" GenomeVizControllers

Tree --|> GenomeViz
MetaTable --|> GenomeViz
Map --|> GenomeViz

class GroupVizControllers {
	- controllers : GenomeViz[]
	+ GenomeViz register(String groupVizClass, Object widget)
	+ trigger(String channel=[metaUpdate|genomeDatasetUpdate|selectionUpdate], Object widget)
}
GroupVizControllers --|> Observable
GroupVizControllers "1" <--* "1" GenomeWidget

abstract GroupViz {
	+ groupModel : GroupModel
	+ metaUpdate()
	+ genomeDatasetUpdate()
	+ selectionUpdate()
	+ view()
	+ controller()
}
GroupViz "0..*" <--o "1" GroupVizControllers

GenomesList --|> GroupViz

class GroupModels {
	- models: GroupModel
	- GroupModel register(Int group_id, Object widget)
	- add(Int group_id, Object genome)
	- remove(Int group_id, Object genome)
	- submit(Int group_id)
	- updateGenomeDataset(Int genome_dataset_id)
}
GroupModels "1" <--* "1" GenomeWidget 

class GroupModel {
	+ category : String
	+ name : String
	+ add(Object genome)
	+ remove(Object genome)
	+ submit()
	+ getGroup()
}
GroupModel "0..*" <--o "1" GroupModels


class MetadataModel {
	+ host : bool
	+ source : bool
	+ syndrome : bool
	+ serotype : bool
	+ date : bool
	+ strain : bool
	+ accession : bool
	+ stx1_subtype : bool
	+ stx2_subtype : bool
}
MetadataModel "1" o--> "1" GenomeWidget

class FilterModel {
	
}
FilterModel "1" o--> "1" GenomeWidget

class SetString {
	+ encode()
	+ stringify()
}
SetString "0..1" <--o "1" FilterModel

abstract SetToken {

}
SetToken "1..*" <--o "1" SetString

class SetOperator {
	+ operator : String
}
SetOperator --|> SetToken

class Set {
	+ category : String
	+ value : String
}
Set --|> SetToken

MetadataDisplayControl "1" <--* "1" GenomeWidget
MetadataDisplayControl "1" <--o "1" MetadataModel

class MetadataFilterControl {
	- validateFilter()
}
MetadataFilterControl "1" <--* "1" GenomeWidget
MetadataFilterControl "1" <--o "1" FilterModel


@enduml