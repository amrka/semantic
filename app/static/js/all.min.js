(function() {
  var Header, Hello, Home, Login, Routes, SuperphyBase, base, header, hello, home, login, routes, urljson;

  Header = (function() {
    function Header() {}

    Header.prototype.links = [
      {
        title: "Home",
        url: "/home"
      }, {
        title: "Group Browse",
        url: "/gbrowse"
      }, {
        title: "Group Analyses",
        url: "/groups"
      }, {
        title: "VF and AMR",
        url: "/factors"
      }, {
        title: "Flask - Hello",
        url: "/hello"
      }
    ];

    Header.prototype.controller = function() {};

    Header.prototype.view = function() {
      var link;
      return m("div", {
        "class": 'container-fluid'
      }, [
        m("nav", {
          "class": 'navbar navbar-default navbar-fixed-top',
          role: 'navigation'
        }, [
          m("div", {
            "class": 'navbar-header'
          }, [
            m("a", {
              "class": "navbar-brand",
              href: "/home",
              config: m.route
            }, "SuperPhy")
          ]), m("ul", {
            "class": 'nav navbar-nav'
          }, [
            (function() {
              var i, len, ref, results;
              ref = this.links;
              results = [];
              for (i = 0, len = ref.length; i < len; i++) {
                link = ref[i];
                results.push(m("li", m("a", {
                  href: link.url,
                  config: m.route
                }, link.title)));
              }
              return results;
            }).call(this), m("li", {
              "class": "dropdown"
            }, [
              m("a", {
                href: "",
                role: "button",
                "class": "dropdown-toggle",
                'data-toggle': "dropdown"
              }, "My Data", [
                m("b", {
                  "class": "caret"
                })
              ])
            ])
          ])
        ])
      ]);
    };

    return Header;

  })();

  header = new Header();

  urljson = 'http://10.139.14.121:5000/mithril/query';

  ({
    doSomething: function(result) {
      var key, results, value;
      results = [];
      for (key in result) {
        value = result[key];
        results.push(console.log(key + " and " + value));
      }
      return results;
    }
  });

  Hello = (function() {
    var data, users;

    function Hello() {}

    users = {};

    data = {};

    Hello.prototype.controller = function() {
      users = m.prop([]);
      users = m.request({
        method: "GET",
        url: urljson,
        background: true,
        initialValue: []
      }).then(users);
      return users.then(m.redraw);
    };

    Hello.prototype.view = function() {
      return [
        home.view(), m("div", ["Getting the first 3 triples in the triplestore."]), m("p.home-beta", {
          "class": 'text-center'
        }, [JSON.stringify(users)])
      ];
    };

    return Hello;

  })();

  hello = new Hello();

  Home = (function() {
    function Home() {}

    Home.prototype.controller = function() {};

    Home.prototype.view = function() {
      return [
        header.view(), m("div", {
          "class": 'container',
          id: 'home-beta'
        }, [
          m("div", {
            "class": 'row'
          }, [
            m("div", {
              "class": 'well center-block'
            }, [
              m("p", {
                "class": 'text-center'
              }, [
                m("span", {
                  "class": 'text-info beta-release'
                }, "Beta Release"), " Some features are still under development and may not be fully functional."
              ])
            ])
          ]), m("div", {
            "class": 'row superphy-image'
          }, [
            m("img", {
              src: 'images/superphy_logo_with_title.png'
            }), m("p", {
              "class": 'superphy-image'
            }, 'NEXT-LEVEL PHYLOGENETIC AND EPIDEMIOLOGICAL ANALYSIS OF PATHOGENS')
          ]), m("div", {
            "class": 'row well'
          }, [m("p", 'A user-friendly, integrated platform for the predictive genomic analyses of ', [m("em", 'Escherichia coli')]), m("p", 'Provides near real-time analyses of thousands of genomes using novel computational approaches.'), m("p", 'Generates results that are understandable and useful to a wide community of users.')]), m("div", {
            "class": 'row'
          }, [
            m("button", {
              "class": 'btn btn-danger btn-lg center-block'
            }, "INTRODUCTION")
          ]), m("div", {
            "class": 'row text-center'
          }, [m("p", 'For more information or to discuss possible collaboration, please contact:', [m("p", [m("ul", [m("li", 'Dr. Vic Gannon: vic.gannon@phac-aspc.gc.ca')])])])])
        ])
      ];
    };

    return Home;

  })();

  home = new Home();

  Login = (function() {
    function Login() {}

    Login.prototype.flask = m.request({
      method: 'GET',
      url: "http://127.0.0.1:5000/",
      headers: {
        'Origin': 'localhost',
        'Access-Control-Allow-Origin': 'http://127.0.0.1:5000/'
      },
      crossDomain: true
    });

    return Login;

  })();

  login = new Login();

  login.flask;

  Routes = (function() {
    function Routes() {}

    Routes.prototype.locations = function() {
      return m.route(document.body, "/", {
        "/": home,
        "/home": home,
        "/hello": hello
      });
    };

    return Routes;

  })();

  routes = new Routes();

  routes.locations();

  SuperphyBase = (function() {
    function SuperphyBase() {}

    SuperphyBase.prototype.flaskUrl = "http://127.0.0.1:5000/";

    return SuperphyBase;

  })();

  base = new SuperphyBase();

}).call(this);
